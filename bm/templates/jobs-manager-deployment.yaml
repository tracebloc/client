apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-jobs-manager
spec:
  selector:
    matchLabels:
      app: manager
  replicas: 1
  template:
    metadata:
      labels:
        app: manager
    spec:
      containers:
      - name: api
        image: "tracebloc/pods-monitor:{{ .Values.jobsManager.tag | default "prod" }}"
        imagePullPolicy: Always
        volumeMounts:
          - name: shared-volume
            mountPath: "/data/shared"
        env:
        - name: CLIENT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tracebloc-secrets
              key: CLIENT_PASSWORD
        - name: CLIENT_PVC
          value: "{{ .Values.clientData.name}}"
        - name: CLIENT_LOGS_PVC
          value: "{{ .Values.clientLogsPvc.name}}"
        - name: MYSQL_HOST
          value: "{{ .Values.mysql.name}}"
        - name: CLIENT_ENV
          value: {{ .Values.jobsManager.env.CLIENT_ENV | default "prod" | quote }}
        {{- range $key, $value := .Values.jobsManager.env }}
        {{- if ne $key "CLIENT_ENV" }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
      - name: pods-monitor-container
        image: "tracebloc/pods-monitor:{{ .Values.jobsManager.tag | default "prod" }}"
        imagePullPolicy: Always
        env:
          - name: CLIENT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: tracebloc-secrets
                key: CLIENT_PASSWORD
          - name: CLIENT_LOGS_PVC
            value: "{{ .Values.clientLogsPvc.name}}"
          - name: CLIENT_ENV
            value: {{ .Values.jobsManager.env.CLIENT_ENV | default "prod" | quote }}
        {{- range $key, $value := .Values.jobsManager.env }}
        {{- if ne $key "CLIENT_ENV" }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
      imagePullSecrets:
      - name: {{ .Values.dockerRegistry.secretName }}
      volumes:
        - name: shared-volume
          persistentVolumeClaim:
            claimName: {{ .Values.clientData.name}}
      restartPolicy: Always
      nodeSelector:
        type: system